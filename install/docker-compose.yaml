services:
  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=inventario
      - POSTGRES_USER=inventario
      - POSTGRES_DB=inventario
    volumes:
      - type: volume
        source: volume_inventario
        target: /var/lib/postgresql/data
        volume:
          subpath: postgres_data
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=$${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U docker -d inventario"
  postgress-backup:
    image: kartoza/pg-backup:17-3.5
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_USER=inventario
      - POSTGRES_PASS=inventario
      - POSTGRES_DB=inventario
      - POSTGRES_HOST=postgres
      - CRON_SCHEDULE="0 23 * * * "
    volumes:
      - type: volume
        source: volume_inventario
        target: /backups
        volume:
          subpath: postgres_backup

  inventario-backend:
    image: inventario-backend
    build:
      dockerfile: ../inventario-backend/Dockerfile
      context: ../inventario-backend
    ports:
      - "5000:80"
    environment:
      - APP_SETTINGS_MODULE=config.dev
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost/api/v1/sistemas || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
  inventario-frontend:
    image: inventario-frontend
    build:
      dockerfile: ../inventario-frontend/Dockerfile
      context: ../inventario-frontend
      args:
        STAGE: local
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      - APP_SETTINGS_MODULE=config.dev
    secrets:
      - source: secret_inventario_nginx_crt
        target: /etc/nginx/nginx.crt
      - source: secret_inventario_nginx_key
        target: /etc/nginx/nginx.key
    restart: on-failure
    healthcheck:
      test: curl --fail --insecure https://localhost/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      inventario-backend:
        condition: service_healthy
  redis:
    image: redis/redis-stack:6.2.6-v19
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - type: volume
        source: volume_inventario
        target: /data 
        volume:
          subpath: redis_data
      #environment:
      #REDIS_ARGS: "--requirepass pe11gr0s0"
volumes:
  volume_inventario:
    external: true

secrets:
  secret_inventario_nginx_key:
    file: gatewayserver.key
  secret_inventario_nginx_crt:
    file: gatewayserver.crt
  secret_inventario_nginx_pass:
    file: gatewayserver.pass